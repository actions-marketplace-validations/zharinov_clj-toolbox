name: "Setup Clojure tooling"
description: "Install Java, Clojure CLI and Babashka"
inputs:
  #
  # Clojure tooling
  #
  # See: https://github.com/DeLaGuardo/setup-clojure/blob/main/action.yml
  #
  clojure-cli:
    description: Clojure CLI version to install
    required: false
    default: 1.11.1.1155
  leiningen:
    description: Leiningen build tool version to install
    required: false
  boot:
    description: Boot build tool version to install
    required: false
  babashka:
    description: Babashka scripting tool version to install
    required: false
  clj-kondo:
    description: Clj-kondo linting tool version to install
    required: false
  cljstyle:
    description: Cljstyle formatting tool version to install
    required: false
  zprint:
    description: Zprint formatting tool version to install
    required: false

  #
  # Java tooling
  #
  # See: https://github.com/actions/setup-java/blob/main/action.yml
  #
  java:
    default: temurin
    required: false
  java-version:
    default: 17
    required: false

  #
  # GraalVM tooling
  #
  # See: https://github.com/graalvm/setup-graalvm/blob/main/action.yml
  #
  graalvm-version:
    default: 22.1.0
    required: false
  graalvm-components:
    default: native-image
    required: false

  #
  # Misc parameters
  #
  github-token:
    description: >+
      To avoid rate limit errors, you need to provide GitHub token.
      More info: https://docs.github.com/en/actions/security-guides/automatic-token-authentication
    default: ${{ github.token }}
    required: false

runs:
  using: composite
  steps:
    - name: Computed values
      id: vars
      shell: ${{ (runner.os == 'Windows' && 'pwsh') || 'bash' }}
      run: |
        echo "::set-output name=java-major-version::${{
          (startsWith(inputs.java-version, '8.')  && '8')  ||
          (startsWith(inputs.java-version, '11.') && '11') ||
          (startsWith(inputs.java-version, '16.') && '16') ||
          (startsWith(inputs.java-version, '17.') && '17') ||
          inputs.java-version
        }}"

        echo "::set-output name=arch::${{
          (runner.arch == 'ARM' && 'arm')     || 
          (runner.arch == 'ARM64' && 'arm64') || 
          (runner.arch == 'X86' && 'ia32')    || 
          (runner.arch == 'X64' && 'x64')     || 
          runner.arch
        }}

        echo "::set-output name=os::${{
          (runner.os == 'macOS' && 'darwin')  || 
          (runner.os == 'Windows' && 'win32') || 
          (runner.os == 'Linux' && 'linux')   || 
          runner.os 
        }}

    - name: Setup Java
      uses: actions/setup-java@v3.4.1
      if: ${{ inputs.java && inputs.java != 'graalvm' }}
      with:
        distribution: ${{ inputs.java }}
        java-version: ${{ inputs.java-version }}

    - name: Cache GraalVM tooling
      if: ${{ inputs.java == 'graalvm' }}
      uses: actions/cache@v3.0.6
      with:
        path: |
          ${{ runner.tool_cache }}/graalvm-?e-java${{ steps.vars.outputs.java-major-version }}-${{ steps.vars.outputs.os }}/${{ inputs.graalvm-version }}/${{ steps.vars.outputs.arch }}/graalvm-?e-java${{ steps.vars.outputs.java-major-version }}-${{ inputs.graalvm-version }}/
          ${{ runner.tool_cache }}/graalvm-?e-java${{ steps.vars.outputs.java-major-version }}-${{ steps.vars.outputs.os }}/${{ inputs.graalvm-version }}/${{ steps.vars.outputs.arch }}.complete
        key: graalvm-cache-java${{ steps.vars.outputs.java-major-version }}-graalvm${{ inputs.graalvm-version }}-${{ steps.vars.outputs.os }}-${{ steps.vars.outputs.arch }}

    - name: Setup GraalVM
      uses: graalvm/setup-graalvm@v1
      if: ${{ inputs.java == 'graalvm' }}
      with:
        version: ${{ inputs.graalvm-version }}
        java-version: ${{ inputs.java-version }}
        components: ${{ inputs.graalvm-components }}
        github-token: ${{ inputs.github-token }}

    - name: Setup Clojure
      uses: DeLaGuardo/setup-clojure@9.3
      if: ${{ inputs.clojure-cli || inputs.leiningen || inputs.boot || inputs.babashka || inputs.clj-kondo || inputs.cljstyle || inputs.zprint }}
      with:
        cli: ${{ inputs.clojure-cli }}
        lein: ${{ inputs.leiningen }}
        boot: ${{ inputs.boot }}
        bb: ${{ inputs.babashka }}
        clj-kondo: ${{ inputs.clj-kondo }}
        cljstyle: ${{ inputs.cljstyle }}
        zprint: ${{ inputs.zprint }}
        github-token: ${{ inputs.github-token }}

    - name: Package cache
      uses: actions/cache@v3.0.6
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
          ~/.deps.clj
        key: clojure-deps-${{ hashFiles('**/project.clj', '**/deps.edn', '**/bb.edn', '**/shadow-cljs.edn') || 'default-cache' }}
        restore-keys: clojure-deps-default-cache
